// <auto-generated />
using System;
using AverbacaoService.shared.DatabaseDetails;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AverbacaoService.Infrastructure.Migrations
{
    [DbContext(typeof(AverbacaoDbContext))]
    partial class AverbacaoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AverbacaoService.Domain.Averbacoes.Averbacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Averbacoes", "AverbacaoService");
                });

            modelBuilder.Entity("AverbacaoService.Domain.Averbacoes.Averbacao", b =>
                {
                    b.OwnsOne("AverbacaoService.shared.ValueObjects.Proposta", "Proposta", b1 =>
                        {
                            b1.Property<Guid>("AverbacaoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Codigo")
                                .IsRequired()
                                .HasColumnType("VARCHAR(15)");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("DECIMAL(18,2)");

                            b1.HasKey("AverbacaoId");

                            b1.ToTable("Averbacoes", "AverbacaoService");

                            b1.WithOwner()
                                .HasForeignKey("AverbacaoId");

                            b1.OwnsOne("AverbacaoService.shared.ValueObjects.Prazo", "Prazo", b2 =>
                                {
                                    b2.Property<Guid>("PropostaAverbacaoId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<int>("Meses")
                                        .HasColumnType("INT");

                                    b2.HasKey("PropostaAverbacaoId");

                                    b2.ToTable("Averbacoes", "AverbacaoService");

                                    b2.WithOwner()
                                        .HasForeignKey("PropostaAverbacaoId");
                                });

                            b1.OwnsOne("AverbacaoService.shared.ValueObjects.Proponente", "Proponente", b2 =>
                                {
                                    b2.Property<Guid>("PropostaAverbacaoId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Cpf")
                                        .IsRequired()
                                        .HasColumnType("VARCHAR(15)");

                                    b2.Property<DateTime>("DataNascimento")
                                        .HasColumnType("DATETIME");

                                    b2.Property<string>("Nome")
                                        .IsRequired()
                                        .HasColumnType("VARCHAR(100)");

                                    b2.Property<string>("Sobrenome")
                                        .IsRequired()
                                        .HasColumnType("VARCHAR(100)");

                                    b2.HasKey("PropostaAverbacaoId");

                                    b2.ToTable("Averbacoes", "AverbacaoService");

                                    b2.WithOwner()
                                        .HasForeignKey("PropostaAverbacaoId");
                                });

                            b1.Navigation("Prazo")
                                .IsRequired();

                            b1.Navigation("Proponente")
                                .IsRequired();
                        });

                    b.Navigation("Proposta")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
